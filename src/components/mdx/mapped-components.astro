---
import type { Props } from 'astro';
import type { ArrayMember } from '~/types';
import H1 from './H1.astro';
import H2 from './H2.astro';
import H3 from './H3.astro';
import H4 from './H4.astro';
import H5 from './H5.astro';
import P from './P.astro';
import A from './A.astro';
import Pre from './Pre.astro';

const components = ['h1', 'h2', 'h3', 'h4', 'h5', 'p', 'pre', 'a'] as const;

export type MarkdownComponents = ArrayMember<typeof components>;

export const mapComponents = (include: MarkdownComponents[], all?: boolean) => {
  const components: Partial<
    Record<MarkdownComponents, (_props: Props) => any>
  > = {};

  if (all) {
    components.h1 = H1;
    components.h2 = H2;
    components.h3 = H3;
    components.h4 = H4;
    components.h5 = H5;
    components.p = P;
    components.a = A;
    components.pre = Pre;

    return components;
  }

  if (include.includes('h1')) components.h1 = H1;
  if (include.includes('h2')) components.h2 = H2;
  if (include.includes('h3')) components.h3 = H3;
  if (include.includes('h4')) components.h4 = H4;
  if (include.includes('h5')) components.h5 = H5;
  if (include.includes('p')) components.p = P;
  if (include.includes('a')) components.a = A;
  if (include.includes('pre')) components.pre = Pre;

  return components;
};
---
